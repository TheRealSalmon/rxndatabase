# Generated by Django 3.1.2 on 2022-02-25 20:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chemical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_name', models.CharField(max_length=300)),
                ('iupac_name', models.CharField(max_length=300)),
                ('smiles', models.CharField(max_length=300)),
                ('cas_number', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggested', models.BooleanField()),
                ('reactant_smarts1', models.CharField(max_length=50)),
                ('reactant_smarts2', models.CharField(max_length=50)),
                ('reactant_smarts3', models.CharField(max_length=50)),
                ('reactant_smarts4', models.CharField(max_length=50)),
                ('reactant_smarts5', models.CharField(max_length=50)),
                ('product_smarts', models.CharField(max_length=50)),
                ('air_free', models.IntegerField(choices=[(0, 'ambient air'), (1, 'argon purge'), (2, 'nitrogen/argon backfill')], default=0)),
                ('water_free', models.IntegerField(choices=[(0, 'no dry'), (1, 'oven-dried')], default=0)),
                ('comment', models.CharField(blank=True, max_length=300)),
                ('catalyst1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cat1', to='rxndatapp.chemical')),
                ('catalyst2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cat2', to='rxndatapp.chemical')),
                ('catalyst3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cat3', to='rxndatapp.chemical')),
                ('reagent1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rgt1', to='rxndatapp.chemical')),
                ('reagent2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rgt2', to='rxndatapp.chemical')),
                ('reagent3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rgt3', to='rxndatapp.chemical')),
                ('reagent4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rgt4', to='rxndatapp.chemical')),
                ('reagent5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rgt5', to='rxndatapp.chemical')),
                ('solvent1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='svt1', to='rxndatapp.chemical')),
                ('solvent2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='svt2', to='rxndatapp.chemical')),
                ('solvent3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='svt3', to='rxndatapp.chemical')),
            ],
        ),
        migrations.CreateModel(
            name='Transformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('suggested', models.BooleanField()),
                ('reactant_smarts1', models.CharField(max_length=50)),
                ('reactant_smarts2', models.CharField(max_length=50)),
                ('reactant_smarts3', models.CharField(max_length=50)),
                ('reactant_smarts4', models.CharField(max_length=50)),
                ('reactant_smarts5', models.CharField(max_length=50)),
                ('product_smarts', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Substrate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggested', models.BooleanField()),
                ('reactant_smiles1', models.CharField(max_length=300)),
                ('reactant_smiles2', models.CharField(max_length=300)),
                ('reactant_smiles3', models.CharField(max_length=300)),
                ('reactant_smiles4', models.CharField(max_length=300)),
                ('reactant_smiles5', models.CharField(max_length=300)),
                ('cat1_eq', models.FloatField()),
                ('cat2_eq', models.FloatField()),
                ('cat3_eq', models.FloatField()),
                ('rgt1_eq', models.FloatField()),
                ('rgt2_eq', models.FloatField()),
                ('rgt3_eq', models.FloatField()),
                ('rgt4_eq', models.FloatField()),
                ('rgt5_eq', models.FloatField()),
                ('svt1_vol', models.FloatField()),
                ('svt2_vol', models.FloatField()),
                ('svt3_vol', models.FloatField()),
                ('product_smiles', models.CharField(max_length=300)),
                ('air_free', models.IntegerField(choices=[(0, 'ambient air'), (1, 'argon purge'), (2, 'nitrogen/argon backfill')], default=0)),
                ('water_free', models.IntegerField(choices=[(0, 'no dry'), (1, 'oven-dried')], default=0)),
                ('rxn_yield', models.FloatField()),
                ('comment', models.CharField(blank=True, max_length=300)),
                ('eln_page', models.CharField(max_length=20)),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rxndatapp.condition')),
            ],
        ),
        migrations.AddField(
            model_name='condition',
            name='transformation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rxndatapp.transformation'),
        ),
    ]
